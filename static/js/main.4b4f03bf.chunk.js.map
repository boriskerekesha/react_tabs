{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","classNames","id","href","onClick","event","currentTarget","handleClick","title","find","content","defaultProps","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAIaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAaA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAACC,GAAD,OACR,oBAEEF,UAAWG,IAAW,CACpB,YAAaL,IAAkBI,EAAIE,KAErC,UAAQ,MALV,SAOE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRA,GAAIF,EAAIE,GACRE,QAAS,SAACC,IA3BJ,SAClBA,EACAL,GAEIK,EAAMC,cAAcJ,KAAON,GAI/BC,EAAcG,GAoBAO,CAAYF,EAAOL,IALvB,SAQGA,EAAIQ,SAdFR,EAAIE,WAqBjB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,mBACGH,EAAKc,MAAK,SAACT,GAAD,OAASA,EAAIE,KAAON,YADjC,aACG,EACGc,cAMZhB,EAAKiB,aAAe,CAClBf,cAAe,SCjDV,IAAMD,EAAO,CAClB,CAAEO,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BE,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOmB,EAAP,KAAoBC,EAApB,KAKA,OACE,sBAAKjB,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAgB,EAAYN,SAGf,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAekB,EAAYZ,GAC3BL,cAfgB,SAACG,GACrBe,EAAef,UCbnBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4b4f03bf.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Props } from '../../types/Props';\nimport { Tab } from '../../types/Tab';\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    tab: Tab,\n  ) => {\n    if (event.currentTarget.id === selectedTabId) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': selectedTabId === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                id={tab.id}\n                onClick={(event) => {\n                  handleClick(event, tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {tabs.find((tab) => tab.id === selectedTabId)\n          ?.content}\n      </div>\n    </div>\n  );\n};\n\nTabs.defaultProps = {\n  selectedTabId: 'tab-1',\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}