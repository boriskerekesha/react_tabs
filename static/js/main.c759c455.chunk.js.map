{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","event","currentTarget","handleClick","title","content","defaultProps","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAIaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAaMC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAW,CACpB,YAAaR,IAAkBI,EAAIC,KAErC,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRA,GAAID,EAAIC,GACRK,QAAS,SAACC,IA7BJ,SAClBA,EACAP,GAEIO,EAAMC,cAAcP,KAAOL,GAI/BC,EAAcG,GAsBAS,CAAYF,EAAOP,IALvB,SAQGA,EAAIU,SAdFV,EAAIC,WAoBhBH,GACC,qBAAKI,UAAU,QAAQ,UAAQ,cAA/B,SACGJ,EAAYa,cAQvBjB,EAAKkB,aAAe,CAClBhB,cAAe,SCpDV,IAAMD,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BE,EAAgB,WAC3B,MAAsCC,mBAASnB,EAAK,IAApD,mBAAOG,EAAP,KAAoBiB,EAApB,KAKA,OACE,sBAAKb,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAJ,EAAYY,SAGf,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAfgB,SAACG,GACrBe,EAAef,UCbnBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c759c455.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Props } from '../../types/Props';\nimport { Tab } from '../../types/Tab';\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    tab: Tab,\n  ) => {\n    if (event.currentTarget.id === selectedTabId) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': selectedTabId === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                id={tab.id}\n                onClick={(event) => {\n                  handleClick(event, tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {selectedTab && (\n        <div className=\"block\" data-cy=\"tab-content\">\n          {selectedTab.content}\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nTabs.defaultProps = {\n  selectedTabId: 'tab-1',\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}